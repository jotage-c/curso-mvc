@{
    ViewData["Title"] = "Relatório de Locação por Período";
}

<h2>@ViewData["Title"]</h2>

<div class="row mb-3">
    <div class="col-md-3">
        <label for="dataInicio" class="form-label">Data Início</label>
        <input type="date" id="dataInicio" class="form-control" />
    </div>
    <div class="col-md-3">
        <label for="dataFim" class="form-label">Data Fim</label>
        <input type="date" id="dataFim" class="form-control" />
    </div>

    <div class="col-md-3">
        <label for="clienteId" class="form-label">Cliente</label>
        <select id="clienteId" class="form-select">
            <option value="">Todos</option>
            @foreach (var cliente in ViewBag.Clientes as List<SelectListItem>)
            {
                <option value="@cliente.Value">@cliente.Text</option>
            }
        </select>
    </div>

    <div class="col-md-3">
        <label for="veiculoId" class="form-label">Veículo</label>
        <select id="veiculoId" class="form-select">
            <option value="">Todos</option>
            @foreach (var veiculo in ViewBag.Veiculos as List<SelectListItem>)
            {
                <option value="@veiculo.Value">@veiculo.Text</option>
            }
        </select>
    </div>


    <div class="col-md-3 align-self-end">
        <button id="btnFiltrar" class="btn btn-primary">Filtrar</button>
    </div>
</div>

<div class="mb-4">
    <h5>Resumo</h5>
    <div id="resumo">
        <p>Total Locações: <span id="totalLocacoes">0</span></p>
        <p>Valor Total: R$ <span id="valorTotal">0,00</span></p>
        <p>Multa Total: R$ <span id="multaTotal">0,00</span></p>
    </div>
</div>

<table id="tabelaRelatorio" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Cliente</th>
            <th>Veículo</th>
            <th>Data Retirada</th>
            <th>Data Devolução Prevista</th>
            <th>Data Devolvida</th>
            <th>Valor Total</th>
            <th>Valor Multa</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<!-- Gráfico -->
<canvas id="graficoRelatorio" height="150"></canvas>

<!-- Botão exportar PDF -->
<button id="btnExportarPDF" class="btn btn-danger mt-3">Exportar PDF</button>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.print.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

    <script>
        let tabela;

        function formatarData(dataStr) {
            const d = new Date(dataStr);
            return d.toLocaleDateString();
        }

        function atualizarResumo(dados) {
            $('#totalLocacoes').text(dados.totalLocacoes);
            $('#valorTotal').text(dados.valorTotal.toFixed(2).replace('.', ','));
            $('#multaTotal').text(dados.multaTotal.toFixed(2).replace('.', ','));
        }

        $(document).ready(function () {
            tabela = $('#tabelaRelatorio').DataTable({
                columns: [
                    { data: 'cliente' },
                    { data: 'veiculo' },
                    { data: 'dataRetirada', render: formatarData },
                    { data: 'dataDevolucaoPrevista', render: formatarData },
                    { data: 'dataDevolvida', render: d => d ? formatarData(d) : '' },
                    { data: 'valorTotal', render: v => 'R$ ' + v.toFixed(2).replace('.', ',') },
                    { data: 'valorMulta', render: v => 'R$ ' + v.toFixed(2).replace('.', ',') },
                ],
                dom: 'Bfrtip',
                buttons: ['copy', 'excel', 'csv', 'print'],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/pt-BR.json'
                },
                paging: true,
                searching: true,
                ordering: true,
            });

            $('#btnFiltrar').click(() => {
                const dataInicio = $('#dataInicio').val();
                const dataFim = $('#dataFim').val();
                const clienteId = $('#clienteId').val();
                const veiculoId = $('#veiculoId').val();

                if (!dataInicio || !dataFim) {
                    alert('Informe o período corretamente.');
                    return;
                }

                $.ajax({
                    url: '@Url.Action("BuscarPorPeriodo")',
                    data: { dataInicio, dataFim, clienteId, veiculoId },
                    success: res => {
                        tabela.clear().rows.add(res.locacoes).draw();
                        atualizarResumo(res.resumo);
                        atualizarGrafico(res.locacoes);
                    }
                });
            });


            // Inicializar gráfico vazio
            window.chart = new Chart(document.getElementById('graficoRelatorio').getContext('2d'), {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Valor Total por Veículo',
                        data: [],
                        backgroundColor: 'rgba(54, 162, 235, 0.7)'
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });

            function atualizarGrafico(locacoes) {
                const labels = [];
                const dados = [];

                // Agrupar por veículo e somar valor total
                const agrupado = locacoes.reduce((acc, curr) => {
                    acc[curr.veiculo] = (acc[curr.veiculo] || 0) + curr.valorTotal;
                    return acc;
                }, {});

                for (const key in agrupado) {
                    labels.push(key);
                    dados.push(agrupado[key]);
                }

                window.chart.data.labels = labels;
                window.chart.data.datasets[0].data = dados;
                window.chart.update();
            }

            $('#btnExportarPDF').click(() => {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();

                doc.text("Relatório de Locações", 14, 20);

                // Exportar tabela
                doc.autoTable({
                    html: '#tabelaRelatorio',
                    startY: 30
                });

                // Exportar gráfico (só uma imagem)
                const canvas = document.getElementById('graficoRelatorio');
                const imgData = canvas.toDataURL("image/png", 1.0);
                doc.addImage(imgData, 'PNG', 14, doc.lastAutoTable.finalY + 10, 180, 60);

                doc.save("relatorio_locacoes.pdf");
            });
        });
    </script>
}
